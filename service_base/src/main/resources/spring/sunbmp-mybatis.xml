<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- 基于Druid数据库链接池的数据源配置 -->
    <bean id="sunbmpDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性driverClassName、 url、user、password -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${sunbmp.jdbc.url}"/>
        <property name="username" value="${sunbmp.jdbc.username}"/>
        <property name="password" value="${sunbmp.jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <!-- 通常来说，只需要修改initialSize、minIdle、maxActive -->
        <property name="initialSize" value="2"/>
        <property name="minIdle" value="2"/>
        <property name="maxActive" value="30"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="5000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <!-- 解密密码必须要配置的项 -->
        <property name="filters" value="stat,config,log4j"/>
        <property name="connectionProperties" value="config.decrypt=false"/>
    </bean>
    <!-- 将数据源映射到sqlSessionFactory中 -->
    <bean id="sunbmpSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="sunbmpDataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <!--<property name="typeAliasesPackage" value="com.zw.facade.entity"/>-->
        <!-- 显式指定Mapper文件位置 -->
        <!--    <property name="mapperLocations" value="classpath:mybatis/mapper/sunbmp/*.xml"/>-->
        <property name="mapperLocations">
            <list>
                <value>classpath:mybatis/mapper/DaoSupportMapper.xml</value>
                <value>classpath*:/boot/mapper/sumbmp/*.xml</value>
            </list>
        </property>
        <!-- MyBatis分页插件配置 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <props>
                            <prop key="dialect">mysql</prop>
                            <prop key="offsetAsPageNum">true</prop>
                            <prop key="rowBoundsWithCount">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- SqlSession模板类实例 -->
    <!-- <bean id="sunbmpSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
        destroy-method="close"> <constructor-arg index="0" ref="sunbmpSqlSessionFactory"
        /> </bean> -->

    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
<!--    <bean id="sunbmpMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zw.service.sunbmp.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sunbmpSqlSessionFactory"/>
    </bean>-->

    <!--======= 事务配置 Begin ================= -->
    <!-- 事务管理器（由Spring管理MyBatis的事务） -->
    <bean id="sunbmpTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 关联数据源 -->
        <property name="dataSource" ref="sunbmpDataSource"></property>
        <qualifier value="issunbmp"/>
    </bean>

    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="sunbmpTransactionManager"/>
    <!--======= 事务配置 End =================== -->

    <bean id="sunbmpSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sunbmpSqlSessionFactory"/>
    </bean>

    <bean id="sunbmpDaoSupport" class="com.zw.service.common.dao.impl.DaoSupportImpl">
        <constructor-arg ref="sunbmpSqlSessionTemplate"/>
    </bean>
</beans>